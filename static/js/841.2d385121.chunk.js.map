{"version":3,"file":"static/js/841.2d385121.chunk.js","mappings":"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","sources":["styles/HeaderStyle.tsx","components/Header/HeaderPague.js","hooks/useGetSections.js","hooks/useGetSectionsForUsers.js","components/ChartSection/ChartSection.js","containers/ChartSectionSection/ChartSectionContainer.js","pages/Section/AnalyticsSection.js","shared/Services/Instance.js","shared/Services/Tramo.js"],"sourcesContent":["import styled from 'styled-components';\r\n\r\nexport const Header = styled.div `\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: space-between;\r\n    text-align: center;\r\n    margin: 10px 0px;\r\n`","import React from 'react';\r\nimport { Header } from '../../styles/HeaderStyle';\r\nimport { Typography } from '@mui/material';\r\n\r\n\r\n\r\nconst HeaderPague = ({ title }) => {\r\n    return (\r\n        <Header>\r\n            <Typography variant=\"h4\" mt={2}>{title}</Typography>\r\n        </Header>\r\n    );\r\n}\r\n\r\nexport default HeaderPague;","import { useEffect, useState } from \"react\";\r\nimport { getAllSections } from \"../shared/Services/Tramo\";\r\nimport dayjs from 'dayjs';\r\n\r\n\r\nconst useGetSections = (dateRange) => {\r\n    const [sections, setSections] = useState([]);\r\n    const [returnFetch, setReturnFetch] = useState(false);\r\n    const [loading, setLoading] = useState(false);\r\n    useEffect(() => {\r\n        setLoading(true);\r\n        getAllSections({ fechainicial: dayjs(dateRange[0]?.$d).format('YYYY-MM-DD'), fechafinal: dayjs(dateRange[1]?.$d).format('YYYY-MM-DD')})\r\n        .then((response) => {\r\n            setLoading(false);\r\n            if(response){\r\n                setSections(response);\r\n            }\r\n        });\r\n    }, [returnFetch]);\r\n\r\n    return { sections, loading, setReturnFetch, returnFetch }\r\n}\r\n\r\nexport default useGetSections;\r\n\r\n\r\n","import { useEffect, useState } from \"react\";\r\nimport { getAllSectionsForUsers } from \"../shared/Services/Tramo\";\r\nimport dayjs from 'dayjs';\r\n\r\nconst useGetSectionForUsers = (dateRange) => {\r\n    const [sectionsForUsers, setSectionsForUsers] = useState([]);\r\n    const [returnFetchForUsers, setReturnFetchForUsers] = useState(false);\r\n    const [loadingForUsers, setLoading] = useState(false);\r\n    useEffect(() => {\r\n        setLoading(true);\r\n        console.log(\"consultando..\")\r\n        getAllSectionsForUsers({ fechainicial: dayjs(dateRange[0]?.$d).format('YYYY-MM-DD'), fechafinal: dayjs(dateRange[1]?.$d).format('YYYY-MM-DD')})\r\n        .then((response) => {\r\n            setLoading(false);\r\n            if(response){\r\n                setSectionsForUsers(response);\r\n            }\r\n        });\r\n    }, [returnFetchForUsers]);\r\n\r\n    return { sectionsForUsers, loadingForUsers, setReturnFetchForUsers, returnFetchForUsers }\r\n}\r\n\r\nexport default useGetSectionForUsers","import { LineChart } from '@mui/x-charts/LineChart';\r\nimport { useEffect, useState } from 'react';\r\nimport { Grid, Box } from '@mui/material';\r\nimport HeaderPague from '../Header/HeaderPague';\r\nimport dayjs from 'dayjs';\r\nimport {\r\n    Chart as ChartJS,\r\n    CategoryScale,\r\n    LinearScale,\r\n    BarElement,\r\n    Title,\r\n    Tooltip,\r\n    Legend,\r\n    PointElement,\r\n    LineElement,\r\n  } from 'chart.js';\r\nimport { Bar, Line } from 'react-chartjs-2';\r\nimport useGetSections from '../../hooks/useGetSections';\r\nimport { getAllSections } from '../../shared/Services/Tramo';\r\n\r\nChartJS.register(\r\n    CategoryScale,\r\n    LinearScale,\r\n    BarElement,\r\n    Title,\r\n    Tooltip,\r\n    Legend,\r\n    PointElement,\r\n    LineElement\r\n  );\r\n\r\nconst ChartSection = ({ sections, sectionsForUsers }) => {\r\n    const [dataConsumos, setDataConsumos] = useState({});\r\n    const [dataPerdidas, setDataPerdidas] = useState({});\r\n    const [dataCostos, setDataCostos] = useState({});\r\n    const [labelsSecondary, setLabelsSecondary] = useState([\"consumo_comercial\",\"consumo_industrial\",\"consumo_residencial\",\"costo_comercial\",\"costo_industrial\",\"costo_residencial\", \"perdidas_comercial\",\"perdidas_industrial\",\"perdidas_residencial\"]);\r\n    const [colors, setColors] = useState([\r\n        '#4e79a7',\r\n        '#f28e2c',\r\n        '#e15759',\r\n        '#76b7b2',\r\n        '#59a14f',\r\n        '#edc949',\r\n        '#af7aa1',\r\n        '#ff9da7',\r\n        '#9c755f',\r\n        '#bab0ab',\r\n      ]);\r\n\r\n    \r\n\r\n    useEffect(() => {\r\n        const labelsData = sections?.map((section) => section?.Linea);\r\n        var dataP = {\r\n            labels: labelsData,\r\n            datasets: [\r\n                {\r\n                  label: 'Perdidas',\r\n                  data: sections?.map((section) => section?.perdidas),\r\n                  backgroundColor: '#4e79a7',\r\n                }\r\n              ],\r\n        };\r\n        var dataC = {\r\n            labels: labelsData,\r\n            datasets: [\r\n                {\r\n                  label: 'Perdidas',\r\n                  data: sections?.map((section) => section?.costo),\r\n                  backgroundColor: '#f28e2c',\r\n                }\r\n              ],\r\n        };\r\n\r\n        var dataCon = {\r\n            labels: labelsData,\r\n            datasets: [\r\n                {\r\n                  label: 'Consumos',\r\n                  data: sections?.map((section) => section?.consumo),\r\n                  backgroundColor: '#76b7b2',\r\n                }\r\n              ],\r\n        };\r\n      \r\n        setDataPerdidas(dataP);\r\n        setDataCostos(dataC);\r\n        setDataConsumos(dataCon); \r\n    }, [sections]);\r\n\r\n    var options = {\r\n        responsive: true,\r\n        plugins: {\r\n            legend: {\r\n            position: 'top',\r\n            },\r\n            title: {\r\n            display: true,\r\n            text: 'Chart.js Bar Chart',\r\n            },\r\n        },\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {dataPerdidas && dataPerdidas?.datasets && dataConsumos && dataCostos && (\r\n            <Grid container spacing={3} >\r\n                <Grid item xs={4}>\r\n                    <Box sx={{  width: '100%' }}>\r\n                        <Line \r\n                            option={options}\r\n                            height={100}\r\n                            data={dataPerdidas}\r\n                        />\r\n                    </Box>\r\n                </Grid>\r\n                <Grid item xs={4}>\r\n                    <Box sx={{  width: '100%' }}>\r\n                        <Line \r\n                            option={options}\r\n                            height={100}\r\n                            data={dataCostos}\r\n                        />\r\n                    </Box>\r\n                </Grid>\r\n                <Grid item xs={4}>\r\n                    <Box sx={{  width: '100%' }}>\r\n                        <Line \r\n                            option={options}\r\n                            height={100}\r\n                            data={dataConsumos}\r\n                        />\r\n                    </Box>\r\n                </Grid>\r\n            </Grid>\r\n            )}\r\n          \r\n               \r\n            <HeaderPague title={'Grafica de Tramos por tipos de Usuario'}/>\r\n            <Grid container spacing={3} >\r\n                <Grid item xs={12}>\r\n                    {sectionsForUsers && sectionsForUsers.map((section, index) => (\r\n                    <Box sx={{  width: '100%' }}>\r\n                    <LineChart\r\n                        colors={[colors[index]]} // Use palette\r\n                        xAxis={[{ scaleType: 'point', data: labelsSecondary }]}\r\n                        series={[\r\n                            {\r\n                            data: [section.consumo_comercial, section.consumo_industrial, section.consumo_residencial, section.costo_comercial, section.costo_industrial, section.costo_residencial, section.perdidas_comercial, section.perdidas_industrial, section.perdidas_residencial],\r\n                            area: true,\r\n                            label: section.Linea\r\n                            },\r\n                        ]}\r\n                        height={300}\r\n                       \r\n                        />\r\n                    </Box>\r\n\r\n                    ))}\r\n                </Grid>\r\n            </Grid>\r\n          \r\n        </>\r\n    );\r\n}\r\n\r\nexport default ChartSection;","import {  useState } from 'react';\r\n/* components */\r\nimport HeaderPague from \"../../components/Header/HeaderPague\";\r\nimport ChartSection from \"../../components/ChartSection/ChartSection\";\r\n/* mui */\r\nimport { LocalizationProvider } from '@mui/x-date-pickers-pro';\r\nimport { AdapterDayjs } from \"@mui/x-date-pickers/AdapterDayjs\";\r\nimport { DemoContainer } from '@mui/x-date-pickers/internals/demo';\r\nimport { DateRangePicker } from '@mui/x-date-pickers-pro/DateRangePicker';\r\nimport dayjs from 'dayjs';\r\n/** hooks */\r\nimport useGetSections from '../../hooks/useGetSections';\r\nimport useGetSectionForUsers from '../../hooks/useGetSectionsForUsers';\r\n\r\nconst ChartSectionContainer = () => {\r\n    const [dateRange, setDateRange] = useState([\r\n        dayjs('2010-01-01'),\r\n        dayjs('2010-01-30'),\r\n    ]);\r\n\r\n    const { sections, loading, setReturnFetch, returnFetch} = useGetSections(dateRange);\r\n    const { sectionsForUsers, loadingForUsers, setReturnFetchForUsers, returnFetchForUsers} = useGetSectionForUsers(dateRange);\r\n\r\n    const handleChangeDateRange = (newValue) => {\r\n        if(newValue[1]){\r\n            setDateRange(newValue);\r\n            setReturnFetch(!returnFetch);\r\n            setReturnFetchForUsers(!returnFetchForUsers);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {/* header pague */}\r\n             <HeaderPague \r\n                title={'Graficas de Tramos'} \r\n            />\r\n\r\n             {/* date range */}\r\n             <div>\r\n                <LocalizationProvider dateAdapter={AdapterDayjs}>\r\n                <DemoContainer components={['DateRangePicker']}>\r\n                    <DateRangePicker\r\n                        value={dateRange}\r\n                        onChange={(newValue) => handleChangeDateRange(newValue)} \r\n                        localeText={{ start: 'Fecha Inicio', end: 'Fecha Final' }} \r\n                    />\r\n                </DemoContainer>\r\n                </LocalizationProvider>\r\n            </div>\r\n\r\n         \r\n\r\n            <ChartSection \r\n                sections={sections}\r\n                sectionsForUsers={sectionsForUsers}\r\n            />\r\n\r\n        </>\r\n    );\r\n}\r\n\r\nexport default ChartSectionContainer;","import ChartSectionContainer from \"../../containers/ChartSectionSection/ChartSectionContainer\";\r\n\r\nconst AnalyticsSection = () => {\r\n    return (\r\n        <>\r\n            <ChartSectionContainer />\r\n        </>\r\n    );\r\n}\r\n\r\nexport default AnalyticsSection;","import axios from \"axios\";\r\n\r\nexport const axiosInstanceInfoDesign = axios.create({\r\n    baseURL: process.env.REACT_APP_API_DECAMERON_URL,\r\n});\r\n\r\naxiosInstanceInfoDesign.interceptors.response.use(\r\n    (res) => res.data,\r\n    (err) => {\r\n      return new Promise((resolve, reject) => {\r\n        reject(err.response.data);\r\n      });\r\n    }\r\n  );\r\n","import { axiosInstanceInfoDesign } from \"./Instance\"\r\n\r\nexport const getAllSections = (data : any) => {\r\n    return axiosInstanceInfoDesign.post('tramos', data);\r\n}\r\n\r\nexport const getAllSectionsForUsers = (data : any) => {\r\n    return axiosInstanceInfoDesign.post('cliente', data);\r\n}\r\n\r\nexport const getAllWorstSections = (data : any) => {\r\n    return axiosInstanceInfoDesign.post('tramos-cliente', data);\r\n}"],"names":["Header","styled","_templateObject","_taggedTemplateLiteral","_ref","title","_jsx","children","Typography","variant","mt","dateRange","_useState","useState","_useState2","_slicedToArray","sections","setSections","_useState3","_useState4","returnFetch","setReturnFetch","_useState5","_useState6","loading","setLoading","useEffect","_dateRange$","_dateRange$2","getAllSections","fechainicial","dayjs","$d","format","fechafinal","then","response","sectionsForUsers","setSectionsForUsers","returnFetchForUsers","setReturnFetchForUsers","loadingForUsers","console","log","getAllSectionsForUsers","ChartJS","CategoryScale","LinearScale","BarElement","Title","Tooltip","Legend","PointElement","LineElement","dataConsumos","setDataConsumos","dataPerdidas","setDataPerdidas","dataCostos","setDataCostos","_useState7","_useState8","labelsSecondary","_useState9","_useState10","colors","labelsData","map","section","Linea","dataP","labels","datasets","label","data","perdidas","backgroundColor","dataC","costo","dataCon","consumo","options","responsive","plugins","legend","position","display","text","_jsxs","_Fragment","Grid","container","spacing","item","xs","Box","sx","width","Line","option","height","HeaderPague","index","LineChart","xAxis","scaleType","series","consumo_comercial","consumo_industrial","consumo_residencial","costo_comercial","costo_industrial","costo_residencial","perdidas_comercial","perdidas_industrial","perdidas_residencial","area","setDateRange","_useGetSections","useGetSections","_useGetSectionForUser","useGetSectionForUsers","LocalizationProvider","dateAdapter","AdapterDayjs","DemoContainer","components","DateRangePicker","value","onChange","newValue","handleChangeDateRange","localeText","start","end","ChartSection","ChartSectionContainer","axiosInstanceInfoDesign","axios","baseURL","process","interceptors","use","res","err","Promise","resolve","reject"],"sourceRoot":""}